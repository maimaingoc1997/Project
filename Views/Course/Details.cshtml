@using CourseShopOnline.Models.Enum
@model Course

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8" />
    <title>@Model.Title</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', sans-serif;
        }

        .course-container {
            max-width: 900px;
            margin: 40px auto;
        }

        .card {
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
        }

        .badge {
            font-size: 0.9rem;
        }

        video {
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        h2 {
            font-weight: bold;
        }

        .btn-sm {
            border-radius: 20px;
        }

        .section-title {
            font-weight: 600;
            margin-top: 30px;
            margin-bottom: 10px;
        }

        ul {
            padding-left: 1.2rem;
        }

        li {
            margin-bottom: 8px;
        }
    </style>
</head>
<body>
    <div class="container course-container">
        <h2 class="text-center mb-4">@Model.Title</h2>

        <div class="card p-4">
            <div class="card-body">
                <div class="course-image-container mb-3 d-flex justify-content-center">
                    <img src="@Model.ImageUrl" class="img-fluid rounded-3" style="max-width:auto; height: 250px" alt="Course Image" />
                </div>
                <h5 class="section-title">üìñ M√¥ t·∫£ kh√≥a h·ªçc</h5>
                <p>@Model.Description</p>

                <h6 class="section-title">üíµ Gi√°: <span class="text-success fw-bold">@Model.Price.ToString("N0") VNƒê</span></h6>

                <p>
                    @if (Model.Status == CourseStatus.PendingApproval)
                    {
                        <span class="badge bg-warning text-dark">‚è≥ Ch·ªù duy·ªát</span>
                    }
                    else if (Model.Status == CourseStatus.Approved)
                    {
                        <span class="badge bg-success">‚úÖ ƒê√£ duy·ªát</span>
                    }
                    else if (Model.Status == CourseStatus.Rejected)
                    {
                        <span class="badge bg-danger">‚ùå B·ªã t·ª´ ch·ªëi</span>
                    }
                </p>

                <h6 class="section-title">üë• S·ªë h·ªçc sinh ƒë√£ ƒëƒÉng k√Ω: @ViewData["ApprovedEnrollmentsCount"]</h6>

                @if (User.IsInRole("Student"))
                {
                    var enrollment = ViewData["Enrollment"] as Enrollment;

                    if (enrollment == null || enrollment.EnollingStatus == EnollingStatus.NotEnrolled)
                    {
                        if (Model.Status == CourseStatus.Approved)
                        {
                            <form method="post" action="@Url.Action("Enroll", "Course", new { id = Model.CourseId })">
                                <button type="submit" class="btn btn-primary mt-2">ƒêƒÉng k√Ω kh√≥a h·ªçc</button>
                            </form>
                        }
                        else
                        {
                            <p class="text-muted mt-2">B·∫°n kh√¥ng th·ªÉ ƒëƒÉng k√Ω kh√≥a h·ªçc khi ch∆∞a ƒë∆∞·ª£c duy·ªát.</p>
                        }
                    }
                    else if (enrollment.EnollingStatus == EnollingStatus.Pending)
                    {
                        <p class="text-warning mt-2">üïí B·∫°n ƒë√£ ƒëƒÉng k√Ω v√† ƒëang ch·ªù gi·∫£ng vi√™n duy·ªát.</p>
                    }
                    else if (enrollment.EnollingStatus == EnollingStatus.Approved)
                    {
                        <h6 class="section-title">üé¨ Video gi·ªõi thi·ªáu kh√≥a h·ªçc</h6>
                        <video width="100%" controls>
                            <source src="@Model.PreviewVideoUrl" type="video/mp4">
                            Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ video.
                        </video>
                        <a href="@Url.Action("Create", "Review", new { courseId = Model.CourseId })" class="btn btn-info btn-sm mt-3">
                            Th√™m ƒë√°nh gi√°
                        </a>
                    }
                    else
                    {
                        <p class="text-muted">Tr·∫°ng th√°i ƒëƒÉng k√Ω kh√¥ng h·ª£p l·ªá.</p>
                    }
                }

                @if (User.IsInRole("Teacher"))
                {
                    <h5 class="section-title">üìã Danh s√°ch h·ªçc sinh ƒëƒÉng k√Ω</h5>

                    <h6 class="mb-2">üü° H·ªçc sinh ƒëang ch·ªù duy·ªát:</h6>
                    <ul>
                        @foreach (var enrollment in ViewData["Enrollments"] as IEnumerable<Enrollment>)
                        {
                            if (enrollment.EnollingStatus == EnollingStatus.Pending)
                            {
                                <li>
                                    <strong>@enrollment.Student.UserName</strong> - <span class="badge bg-warning text-dark">Ch·ªù duy·ªát</span>
                                    <form method="post" class="d-inline" action="@Url.Action("ApproveEnrollment", "Course", new { enrollmentId = enrollment.EnrollmentId })">
                                        <button type="submit" class="btn btn-success btn-sm ms-2">Duy·ªát</button>
                                    </form>
                                </li>
                            }
                        }
                    </ul>

                    <h6 class="mt-4 mb-2">üü¢ H·ªçc sinh ƒë√£ ƒë∆∞·ª£c duy·ªát:</h6>
                    <ul>
                        @foreach (var enrollment in ViewData["Enrollments"] as IEnumerable<Enrollment>)
                        {
                            if (enrollment.EnollingStatus == EnollingStatus.Approved)
                            {
                                <li>
                                    <strong>@enrollment.Student.UserName</strong> - <span class="badge bg-success">ƒê√£ duy·ªát</span>
                                </li>
                            }
                        }
                    </ul>
                }

                <div class="mt-4">
                    <a href="@Url.Action("CourseReviews", "Review", new { courseId = Model.CourseId })" class="btn btn-outline-info btn-sm">
                        üìä Xem ƒë√°nh gi√° kh√≥a h·ªçc
                    </a>
                </div>

                <div class="d-flex justify-content-end mt-4">
                    <a href="@Url.Action("Index", "Course")" class="btn btn-secondary">‚¨Ö Quay l·∫°i danh s√°ch</a>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
